/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.analysis;

import java.util.*;
import sarapatel.node.*;

public class DepthFirstAdapter extends AnalysisAdapter
{
    public void inStart(Start node)
    {
        defaultIn(node);
    }

    public void outStart(Start node)
    {
        defaultOut(node);
    }

    public void defaultIn(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    public void defaultOut(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    @Override
    public void caseStart(Start node)
    {
        inStart(node);
        node.getPEntrada().apply(this);
        node.getEOF().apply(this);
        outStart(node);
    }

    public void inAProgramaEntrada(AProgramaEntrada node)
    {
        defaultIn(node);
    }

    public void outAProgramaEntrada(AProgramaEntrada node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProgramaEntrada(AProgramaEntrada node)
    {
        inAProgramaEntrada(node);
        {
            List<PPrograma> copy = new ArrayList<PPrograma>(node.getPrograma());
            for(PPrograma e : copy)
            {
                e.apply(this);
            }
        }
        outAProgramaEntrada(node);
    }

    public void inAProdDecVarPrograma(AProdDecVarPrograma node)
    {
        defaultIn(node);
    }

    public void outAProdDecVarPrograma(AProdDecVarPrograma node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProdDecVarPrograma(AProdDecVarPrograma node)
    {
        inAProdDecVarPrograma(node);
        if(node.getProdDecVar() != null)
        {
            node.getProdDecVar().apply(this);
        }
        outAProdDecVarPrograma(node);
    }

    public void inAProdDecConstPrograma(AProdDecConstPrograma node)
    {
        defaultIn(node);
    }

    public void outAProdDecConstPrograma(AProdDecConstPrograma node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProdDecConstPrograma(AProdDecConstPrograma node)
    {
        inAProdDecConstPrograma(node);
        if(node.getProdDecConst() != null)
        {
            node.getProdDecConst().apply(this);
        }
        outAProdDecConstPrograma(node);
    }

    public void inAVarIdProdDecVar(AVarIdProdDecVar node)
    {
        defaultIn(node);
    }

    public void outAVarIdProdDecVar(AVarIdProdDecVar node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAVarIdProdDecVar(AVarIdProdDecVar node)
    {
        inAVarIdProdDecVar(node);
        if(node.getDeclVar() != null)
        {
            node.getDeclVar().apply(this);
        }
        if(node.getDoisPontos() != null)
        {
            node.getDoisPontos().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        outAVarIdProdDecVar(node);
    }

    public void inAVarIdAtribuicaoProdDecVar(AVarIdAtribuicaoProdDecVar node)
    {
        defaultIn(node);
    }

    public void outAVarIdAtribuicaoProdDecVar(AVarIdAtribuicaoProdDecVar node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAVarIdAtribuicaoProdDecVar(AVarIdAtribuicaoProdDecVar node)
    {
        inAVarIdAtribuicaoProdDecVar(node);
        if(node.getDeclVar() != null)
        {
            node.getDeclVar().apply(this);
        }
        if(node.getDoisPontos() != null)
        {
            node.getDoisPontos().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getIdAtribuicao() != null)
        {
            node.getIdAtribuicao().apply(this);
        }
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        outAVarIdAtribuicaoProdDecVar(node);
    }

    public void inAConstanteProdDecConst(AConstanteProdDecConst node)
    {
        defaultIn(node);
    }

    public void outAConstanteProdDecConst(AConstanteProdDecConst node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAConstanteProdDecConst(AConstanteProdDecConst node)
    {
        inAConstanteProdDecConst(node);
        if(node.getDeclConst() != null)
        {
            node.getDeclConst().apply(this);
        }
        if(node.getDoisPontos() != null)
        {
            node.getDoisPontos().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getIdAtribuicao() != null)
        {
            node.getIdAtribuicao().apply(this);
        }
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        outAConstanteProdDecConst(node);
    }

    public void inAIdAtribuicaoIdAtribuicao(AIdAtribuicaoIdAtribuicao node)
    {
        defaultIn(node);
    }

    public void outAIdAtribuicaoIdAtribuicao(AIdAtribuicaoIdAtribuicao node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAIdAtribuicaoIdAtribuicao(AIdAtribuicaoIdAtribuicao node)
    {
        inAIdAtribuicaoIdAtribuicao(node);
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getAtribuicao() != null)
        {
            node.getAtribuicao().apply(this);
        }
        if(node.getPrio0() != null)
        {
            node.getPrio0().apply(this);
        }
        outAIdAtribuicaoIdAtribuicao(node);
    }

    public void inATipoInteiroTipo(ATipoInteiroTipo node)
    {
        defaultIn(node);
    }

    public void outATipoInteiroTipo(ATipoInteiroTipo node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoInteiroTipo(ATipoInteiroTipo node)
    {
        inATipoInteiroTipo(node);
        if(node.getTipoInteiro() != null)
        {
            node.getTipoInteiro().apply(this);
        }
        outATipoInteiroTipo(node);
    }

    public void inATipoBooleanoTipo(ATipoBooleanoTipo node)
    {
        defaultIn(node);
    }

    public void outATipoBooleanoTipo(ATipoBooleanoTipo node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoBooleanoTipo(ATipoBooleanoTipo node)
    {
        inATipoBooleanoTipo(node);
        if(node.getTipoBooleano() != null)
        {
            node.getTipoBooleano().apply(this);
        }
        outATipoBooleanoTipo(node);
    }

    public void inATipoRealTipo(ATipoRealTipo node)
    {
        defaultIn(node);
    }

    public void outATipoRealTipo(ATipoRealTipo node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoRealTipo(ATipoRealTipo node)
    {
        inATipoRealTipo(node);
        if(node.getTipoReal() != null)
        {
            node.getTipoReal().apply(this);
        }
        outATipoRealTipo(node);
    }

    public void inATipoCadeiaTipo(ATipoCadeiaTipo node)
    {
        defaultIn(node);
    }

    public void outATipoCadeiaTipo(ATipoCadeiaTipo node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoCadeiaTipo(ATipoCadeiaTipo node)
    {
        inATipoCadeiaTipo(node);
        if(node.getTipoCadeia() != null)
        {
            node.getTipoCadeia().apply(this);
        }
        outATipoCadeiaTipo(node);
    }

    public void inAPrio1Prio0(APrio1Prio0 node)
    {
        defaultIn(node);
    }

    public void outAPrio1Prio0(APrio1Prio0 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio1Prio0(APrio1Prio0 node)
    {
        inAPrio1Prio0(node);
        if(node.getPrio1() != null)
        {
            node.getPrio1().apply(this);
        }
        outAPrio1Prio0(node);
    }

    public void inACompOuPrio0(ACompOuPrio0 node)
    {
        defaultIn(node);
    }

    public void outACompOuPrio0(ACompOuPrio0 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseACompOuPrio0(ACompOuPrio0 node)
    {
        inACompOuPrio0(node);
        if(node.getPrio0() != null)
        {
            node.getPrio0().apply(this);
        }
        if(node.getCompOu() != null)
        {
            node.getCompOu().apply(this);
        }
        if(node.getPrio1() != null)
        {
            node.getPrio1().apply(this);
        }
        outACompOuPrio0(node);
    }

    public void inAPrio2Prio1(APrio2Prio1 node)
    {
        defaultIn(node);
    }

    public void outAPrio2Prio1(APrio2Prio1 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio2Prio1(APrio2Prio1 node)
    {
        inAPrio2Prio1(node);
        if(node.getPrio2() != null)
        {
            node.getPrio2().apply(this);
        }
        outAPrio2Prio1(node);
    }

    public void inACompEPrio1(ACompEPrio1 node)
    {
        defaultIn(node);
    }

    public void outACompEPrio1(ACompEPrio1 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseACompEPrio1(ACompEPrio1 node)
    {
        inACompEPrio1(node);
        if(node.getPrio1() != null)
        {
            node.getPrio1().apply(this);
        }
        if(node.getCompE() != null)
        {
            node.getCompE().apply(this);
        }
        if(node.getPrio2() != null)
        {
            node.getPrio2().apply(this);
        }
        outACompEPrio1(node);
    }

    public void inAPrio3Prio2(APrio3Prio2 node)
    {
        defaultIn(node);
    }

    public void outAPrio3Prio2(APrio3Prio2 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio3Prio2(APrio3Prio2 node)
    {
        inAPrio3Prio2(node);
        if(node.getPrio3() != null)
        {
            node.getPrio3().apply(this);
        }
        outAPrio3Prio2(node);
    }

    public void inAIgualPrio2(AIgualPrio2 node)
    {
        defaultIn(node);
    }

    public void outAIgualPrio2(AIgualPrio2 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAIgualPrio2(AIgualPrio2 node)
    {
        inAIgualPrio2(node);
        if(node.getPrio2() != null)
        {
            node.getPrio2().apply(this);
        }
        if(node.getIgual() != null)
        {
            node.getIgual().apply(this);
        }
        if(node.getPrio3() != null)
        {
            node.getPrio3().apply(this);
        }
        outAIgualPrio2(node);
    }

    public void inAPrio4Prio3(APrio4Prio3 node)
    {
        defaultIn(node);
    }

    public void outAPrio4Prio3(APrio4Prio3 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio4Prio3(APrio4Prio3 node)
    {
        inAPrio4Prio3(node);
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        outAPrio4Prio3(node);
    }

    public void inAMaiorIgualPrio3(AMaiorIgualPrio3 node)
    {
        defaultIn(node);
    }

    public void outAMaiorIgualPrio3(AMaiorIgualPrio3 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMaiorIgualPrio3(AMaiorIgualPrio3 node)
    {
        inAMaiorIgualPrio3(node);
        if(node.getPrio3() != null)
        {
            node.getPrio3().apply(this);
        }
        if(node.getMaiorIgual() != null)
        {
            node.getMaiorIgual().apply(this);
        }
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        outAMaiorIgualPrio3(node);
    }

    public void inAMaiorPrio3(AMaiorPrio3 node)
    {
        defaultIn(node);
    }

    public void outAMaiorPrio3(AMaiorPrio3 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMaiorPrio3(AMaiorPrio3 node)
    {
        inAMaiorPrio3(node);
        if(node.getPrio3() != null)
        {
            node.getPrio3().apply(this);
        }
        if(node.getMaior() != null)
        {
            node.getMaior().apply(this);
        }
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        outAMaiorPrio3(node);
    }

    public void inAPrio5Prio4(APrio5Prio4 node)
    {
        defaultIn(node);
    }

    public void outAPrio5Prio4(APrio5Prio4 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio5Prio4(APrio5Prio4 node)
    {
        inAPrio5Prio4(node);
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        outAPrio5Prio4(node);
    }

    public void inASomaPrio4(ASomaPrio4 node)
    {
        defaultIn(node);
    }

    public void outASomaPrio4(ASomaPrio4 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASomaPrio4(ASomaPrio4 node)
    {
        inASomaPrio4(node);
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        if(node.getSoma() != null)
        {
            node.getSoma().apply(this);
        }
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        outASomaPrio4(node);
    }

    public void inAMenosPrio4(AMenosPrio4 node)
    {
        defaultIn(node);
    }

    public void outAMenosPrio4(AMenosPrio4 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMenosPrio4(AMenosPrio4 node)
    {
        inAMenosPrio4(node);
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        if(node.getMenos() != null)
        {
            node.getMenos().apply(this);
        }
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        outAMenosPrio4(node);
    }

    public void inAPrio6Prio5(APrio6Prio5 node)
    {
        defaultIn(node);
    }

    public void outAPrio6Prio5(APrio6Prio5 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio6Prio5(APrio6Prio5 node)
    {
        inAPrio6Prio5(node);
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        outAPrio6Prio5(node);
    }

    public void inAMultPrio5(AMultPrio5 node)
    {
        defaultIn(node);
    }

    public void outAMultPrio5(AMultPrio5 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMultPrio5(AMultPrio5 node)
    {
        inAMultPrio5(node);
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        if(node.getMult() != null)
        {
            node.getMult().apply(this);
        }
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        outAMultPrio5(node);
    }

    public void inADivPrio5(ADivPrio5 node)
    {
        defaultIn(node);
    }

    public void outADivPrio5(ADivPrio5 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseADivPrio5(ADivPrio5 node)
    {
        inADivPrio5(node);
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        if(node.getDiv() != null)
        {
            node.getDiv().apply(this);
        }
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        outADivPrio5(node);
    }

    public void inAModPrio5(AModPrio5 node)
    {
        defaultIn(node);
    }

    public void outAModPrio5(AModPrio5 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAModPrio5(AModPrio5 node)
    {
        inAModPrio5(node);
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        if(node.getMod() != null)
        {
            node.getMod().apply(this);
        }
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        outAModPrio5(node);
    }

    public void inAPrio7Prio6(APrio7Prio6 node)
    {
        defaultIn(node);
    }

    public void outAPrio7Prio6(APrio7Prio6 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio7Prio6(APrio7Prio6 node)
    {
        inAPrio7Prio6(node);
        if(node.getPrio7() != null)
        {
            node.getPrio7().apply(this);
        }
        outAPrio7Prio6(node);
    }

    public void inANegacaoPrio6(ANegacaoPrio6 node)
    {
        defaultIn(node);
    }

    public void outANegacaoPrio6(ANegacaoPrio6 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseANegacaoPrio6(ANegacaoPrio6 node)
    {
        inANegacaoPrio6(node);
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        if(node.getNegacao() != null)
        {
            node.getNegacao().apply(this);
        }
        if(node.getPrio7() != null)
        {
            node.getPrio7().apply(this);
        }
        outANegacaoPrio6(node);
    }

    public void inANumeroIntPrio7(ANumeroIntPrio7 node)
    {
        defaultIn(node);
    }

    public void outANumeroIntPrio7(ANumeroIntPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseANumeroIntPrio7(ANumeroIntPrio7 node)
    {
        inANumeroIntPrio7(node);
        if(node.getNumeroInt() != null)
        {
            node.getNumeroInt().apply(this);
        }
        outANumeroIntPrio7(node);
    }

    public void inANumeroRealPrio7(ANumeroRealPrio7 node)
    {
        defaultIn(node);
    }

    public void outANumeroRealPrio7(ANumeroRealPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseANumeroRealPrio7(ANumeroRealPrio7 node)
    {
        inANumeroRealPrio7(node);
        if(node.getNumeroReal() != null)
        {
            node.getNumeroReal().apply(this);
        }
        outANumeroRealPrio7(node);
    }

    public void inABooleanoPrio7(ABooleanoPrio7 node)
    {
        defaultIn(node);
    }

    public void outABooleanoPrio7(ABooleanoPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABooleanoPrio7(ABooleanoPrio7 node)
    {
        inABooleanoPrio7(node);
        if(node.getVerdade() != null)
        {
            node.getVerdade().apply(this);
        }
        outABooleanoPrio7(node);
    }

    public void inAPrio7(APrio7 node)
    {
        defaultIn(node);
    }

    public void outAPrio7(APrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio7(APrio7 node)
    {
        inAPrio7(node);
        if(node.getFalso() != null)
        {
            node.getFalso().apply(this);
        }
        outAPrio7(node);
    }

    public void inAParPrio7(AParPrio7 node)
    {
        defaultIn(node);
    }

    public void outAParPrio7(AParPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAParPrio7(AParPrio7 node)
    {
        inAParPrio7(node);
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getPrio0() != null)
        {
            node.getPrio0().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        outAParPrio7(node);
    }
}
