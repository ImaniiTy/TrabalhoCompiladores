/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.analysis;

import java.util.*;
import sarapatel.node.*;

public class DepthFirstAdapter extends AnalysisAdapter
{
    public void inStart(Start node)
    {
        defaultIn(node);
    }

    public void outStart(Start node)
    {
        defaultOut(node);
    }

    public void defaultIn(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    public void defaultOut(@SuppressWarnings("unused") Node node)
    {
        // Do nothing
    }

    @Override
    public void caseStart(Start node)
    {
        inStart(node);
        node.getPEntrada().apply(this);
        node.getEOF().apply(this);
        outStart(node);
    }

    public void inAProgramaEntrada(AProgramaEntrada node)
    {
        defaultIn(node);
    }

    public void outAProgramaEntrada(AProgramaEntrada node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProgramaEntrada(AProgramaEntrada node)
    {
        inAProgramaEntrada(node);
        {
            List<PProgramaEsq> copy = new ArrayList<PProgramaEsq>(node.getProgramaEsq());
            for(PProgramaEsq e : copy)
            {
                e.apply(this);
            }
        }
        {
            List<PProgramaDir> copy = new ArrayList<PProgramaDir>(node.getProgramaDir());
            for(PProgramaDir e : copy)
            {
                e.apply(this);
            }
        }
        outAProgramaEntrada(node);
    }

    public void inAProdDeclVarProgramaEsq(AProdDeclVarProgramaEsq node)
    {
        defaultIn(node);
    }

    public void outAProdDeclVarProgramaEsq(AProdDeclVarProgramaEsq node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProdDeclVarProgramaEsq(AProdDeclVarProgramaEsq node)
    {
        inAProdDeclVarProgramaEsq(node);
        if(node.getProdDeclVar() != null)
        {
            node.getProdDeclVar().apply(this);
        }
        outAProdDeclVarProgramaEsq(node);
    }

    public void inAProdDeclConstProgramaEsq(AProdDeclConstProgramaEsq node)
    {
        defaultIn(node);
    }

    public void outAProdDeclConstProgramaEsq(AProdDeclConstProgramaEsq node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProdDeclConstProgramaEsq(AProdDeclConstProgramaEsq node)
    {
        inAProdDeclConstProgramaEsq(node);
        if(node.getProdDeclConst() != null)
        {
            node.getProdDeclConst().apply(this);
        }
        outAProdDeclConstProgramaEsq(node);
    }

    public void inAProdDeclProcedimentoProgramaDir(AProdDeclProcedimentoProgramaDir node)
    {
        defaultIn(node);
    }

    public void outAProdDeclProcedimentoProgramaDir(AProdDeclProcedimentoProgramaDir node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProdDeclProcedimentoProgramaDir(AProdDeclProcedimentoProgramaDir node)
    {
        inAProdDeclProcedimentoProgramaDir(node);
        if(node.getProdDeclProcedimento() != null)
        {
            node.getProdDeclProcedimento().apply(this);
        }
        outAProdDeclProcedimentoProgramaDir(node);
    }

    public void inAProdDeclFuncaoProgramaDir(AProdDeclFuncaoProgramaDir node)
    {
        defaultIn(node);
    }

    public void outAProdDeclFuncaoProgramaDir(AProdDeclFuncaoProgramaDir node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProdDeclFuncaoProgramaDir(AProdDeclFuncaoProgramaDir node)
    {
        inAProdDeclFuncaoProgramaDir(node);
        if(node.getProdDeclFuncao() != null)
        {
            node.getProdDeclFuncao().apply(this);
        }
        outAProdDeclFuncaoProgramaDir(node);
    }

    public void inAVarIdProdDeclVar(AVarIdProdDeclVar node)
    {
        defaultIn(node);
    }

    public void outAVarIdProdDeclVar(AVarIdProdDeclVar node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAVarIdProdDeclVar(AVarIdProdDeclVar node)
    {
        inAVarIdProdDeclVar(node);
        if(node.getDeclVar() != null)
        {
            node.getDeclVar().apply(this);
        }
        if(node.getDoisPontos() != null)
        {
            node.getDoisPontos().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        outAVarIdProdDeclVar(node);
    }

    public void inAVarIdAtribuicaoProdDeclVar(AVarIdAtribuicaoProdDeclVar node)
    {
        defaultIn(node);
    }

    public void outAVarIdAtribuicaoProdDeclVar(AVarIdAtribuicaoProdDeclVar node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAVarIdAtribuicaoProdDeclVar(AVarIdAtribuicaoProdDeclVar node)
    {
        inAVarIdAtribuicaoProdDeclVar(node);
        if(node.getDeclVar() != null)
        {
            node.getDeclVar().apply(this);
        }
        if(node.getDoisPontos() != null)
        {
            node.getDoisPontos().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getIdAtribuicao() != null)
        {
            node.getIdAtribuicao().apply(this);
        }
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        outAVarIdAtribuicaoProdDeclVar(node);
    }

    public void inAConstanteProdDeclConst(AConstanteProdDeclConst node)
    {
        defaultIn(node);
    }

    public void outAConstanteProdDeclConst(AConstanteProdDeclConst node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAConstanteProdDeclConst(AConstanteProdDeclConst node)
    {
        inAConstanteProdDeclConst(node);
        if(node.getDeclConst() != null)
        {
            node.getDeclConst().apply(this);
        }
        if(node.getDoisPontos() != null)
        {
            node.getDoisPontos().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getIdAtribuicao() != null)
        {
            node.getIdAtribuicao().apply(this);
        }
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        outAConstanteProdDeclConst(node);
    }

    public void inAIdAtribuicaoIdAtribuicao(AIdAtribuicaoIdAtribuicao node)
    {
        defaultIn(node);
    }

    public void outAIdAtribuicaoIdAtribuicao(AIdAtribuicaoIdAtribuicao node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAIdAtribuicaoIdAtribuicao(AIdAtribuicaoIdAtribuicao node)
    {
        inAIdAtribuicaoIdAtribuicao(node);
        if(node.getValor() != null)
        {
            node.getValor().apply(this);
        }
        if(node.getAtribuicao() != null)
        {
            node.getAtribuicao().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        outAIdAtribuicaoIdAtribuicao(node);
    }

    public void inAArrayCompArrayComp(AArrayCompArrayComp node)
    {
        defaultIn(node);
    }

    public void outAArrayCompArrayComp(AArrayCompArrayComp node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAArrayCompArrayComp(AArrayCompArrayComp node)
    {
        inAArrayCompArrayComp(node);
        if(node.getColEsq() != null)
        {
            node.getColEsq().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getBarra() != null)
        {
            node.getBarra().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getColDir() != null)
        {
            node.getColDir().apply(this);
        }
        outAArrayCompArrayComp(node);
    }

    public void inATipoBaseTipo(ATipoBaseTipo node)
    {
        defaultIn(node);
    }

    public void outATipoBaseTipo(ATipoBaseTipo node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoBaseTipo(ATipoBaseTipo node)
    {
        inATipoBaseTipo(node);
        if(node.getTipoBase() != null)
        {
            node.getTipoBase().apply(this);
        }
        outATipoBaseTipo(node);
    }

    public void inATipoExpTipo(ATipoExpTipo node)
    {
        defaultIn(node);
    }

    public void outATipoExpTipo(ATipoExpTipo node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoExpTipo(ATipoExpTipo node)
    {
        inATipoExpTipo(node);
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getColEsq() != null)
        {
            node.getColEsq().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getColDir() != null)
        {
            node.getColDir().apply(this);
        }
        outATipoExpTipo(node);
    }

    public void inATipoInteiroTipoBase(ATipoInteiroTipoBase node)
    {
        defaultIn(node);
    }

    public void outATipoInteiroTipoBase(ATipoInteiroTipoBase node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoInteiroTipoBase(ATipoInteiroTipoBase node)
    {
        inATipoInteiroTipoBase(node);
        if(node.getTipoInteiro() != null)
        {
            node.getTipoInteiro().apply(this);
        }
        outATipoInteiroTipoBase(node);
    }

    public void inATipoBooleanoTipoBase(ATipoBooleanoTipoBase node)
    {
        defaultIn(node);
    }

    public void outATipoBooleanoTipoBase(ATipoBooleanoTipoBase node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoBooleanoTipoBase(ATipoBooleanoTipoBase node)
    {
        inATipoBooleanoTipoBase(node);
        if(node.getTipoBooleano() != null)
        {
            node.getTipoBooleano().apply(this);
        }
        outATipoBooleanoTipoBase(node);
    }

    public void inATipoRealTipoBase(ATipoRealTipoBase node)
    {
        defaultIn(node);
    }

    public void outATipoRealTipoBase(ATipoRealTipoBase node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoRealTipoBase(ATipoRealTipoBase node)
    {
        inATipoRealTipoBase(node);
        if(node.getTipoReal() != null)
        {
            node.getTipoReal().apply(this);
        }
        outATipoRealTipoBase(node);
    }

    public void inATipoCadeiaTipoBase(ATipoCadeiaTipoBase node)
    {
        defaultIn(node);
    }

    public void outATipoCadeiaTipoBase(ATipoCadeiaTipoBase node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoCadeiaTipoBase(ATipoCadeiaTipoBase node)
    {
        inATipoCadeiaTipoBase(node);
        if(node.getTipoCadeia() != null)
        {
            node.getTipoCadeia().apply(this);
        }
        outATipoCadeiaTipoBase(node);
    }

    public void inAProdDeclProcedimentoProdDeclProcedimento(AProdDeclProcedimentoProdDeclProcedimento node)
    {
        defaultIn(node);
    }

    public void outAProdDeclProcedimentoProdDeclProcedimento(AProdDeclProcedimentoProdDeclProcedimento node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProdDeclProcedimentoProdDeclProcedimento(AProdDeclProcedimentoProdDeclProcedimento node)
    {
        inAProdDeclProcedimentoProdDeclProcedimento(node);
        if(node.getPartida() != null)
        {
            node.getPartida().apply(this);
        }
        if(node.getDeclProcedimento() != null)
        {
            node.getDeclProcedimento().apply(this);
        }
        if(node.getDoisPontos() != null)
        {
            node.getDoisPontos().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getParametros() != null)
        {
            node.getParametros().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        if(node.getComandoSe() != null)
        {
            node.getComandoSe().apply(this);
        }
        outAProdDeclProcedimentoProdDeclProcedimento(node);
    }

    public void inAProdDeclFuncaoProdDeclFuncao(AProdDeclFuncaoProdDeclFuncao node)
    {
        defaultIn(node);
    }

    public void outAProdDeclFuncaoProdDeclFuncao(AProdDeclFuncaoProdDeclFuncao node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAProdDeclFuncaoProdDeclFuncao(AProdDeclFuncaoProdDeclFuncao node)
    {
        inAProdDeclFuncaoProdDeclFuncao(node);
        if(node.getDeclFuncao() != null)
        {
            node.getDeclFuncao().apply(this);
        }
        if(node.getDoisPontos() != null)
        {
            node.getDoisPontos().apply(this);
        }
        if(node.getTipo() != null)
        {
            node.getTipo().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getParametros() != null)
        {
            node.getParametros().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        outAProdDeclFuncaoProdDeclFuncao(node);
    }

    public void inAParametroParametros(AParametroParametros node)
    {
        defaultIn(node);
    }

    public void outAParametroParametros(AParametroParametros node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAParametroParametros(AParametroParametros node)
    {
        inAParametroParametros(node);
        if(node.getParametro() != null)
        {
            node.getParametro().apply(this);
        }
        {
            List<PBarraParametro> copy = new ArrayList<PBarraParametro>(node.getBarraParametro());
            for(PBarraParametro e : copy)
            {
                e.apply(this);
            }
        }
        outAParametroParametros(node);
    }

    public void inABarraParametroBarraParametro(ABarraParametroBarraParametro node)
    {
        defaultIn(node);
    }

    public void outABarraParametroBarraParametro(ABarraParametroBarraParametro node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABarraParametroBarraParametro(ABarraParametroBarraParametro node)
    {
        inABarraParametroBarraParametro(node);
        if(node.getBarra() != null)
        {
            node.getBarra().apply(this);
        }
        if(node.getParametro() != null)
        {
            node.getParametro().apply(this);
        }
        outABarraParametroBarraParametro(node);
    }

    public void inATipoParametroParametro(ATipoParametroParametro node)
    {
        defaultIn(node);
    }

    public void outATipoParametroParametro(ATipoParametroParametro node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoParametroParametro(ATipoParametroParametro node)
    {
        inATipoParametroParametro(node);
        if(node.getTipoParametro() != null)
        {
            node.getTipoParametro().apply(this);
        }
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outATipoParametroParametro(node);
    }

    public void inATipoBaseTipoParametro(ATipoBaseTipoParametro node)
    {
        defaultIn(node);
    }

    public void outATipoBaseTipoParametro(ATipoBaseTipoParametro node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoBaseTipoParametro(ATipoBaseTipoParametro node)
    {
        inATipoBaseTipoParametro(node);
        if(node.getTipoBase() != null)
        {
            node.getTipoBase().apply(this);
        }
        outATipoBaseTipoParametro(node);
    }

    public void inATipoParametroTipoParametro(ATipoParametroTipoParametro node)
    {
        defaultIn(node);
    }

    public void outATipoParametroTipoParametro(ATipoParametroTipoParametro node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATipoParametroTipoParametro(ATipoParametroTipoParametro node)
    {
        inATipoParametroTipoParametro(node);
        if(node.getTipoParametro() != null)
        {
            node.getTipoParametro().apply(this);
        }
        if(node.getColEsq() != null)
        {
            node.getColEsq().apply(this);
        }
        if(node.getColDir() != null)
        {
            node.getColDir().apply(this);
        }
        outATipoParametroTipoParametro(node);
    }

    public void inASeSimplesComandoComandoSe(ASeSimplesComandoComandoSe node)
    {
        defaultIn(node);
    }

    public void outASeSimplesComandoComandoSe(ASeSimplesComandoComandoSe node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASeSimplesComandoComandoSe(ASeSimplesComandoComandoSe node)
    {
        inASeSimplesComandoComandoSe(node);
        if(node.getCmdSe() != null)
        {
            node.getCmdSe().apply(this);
        }
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        outASeSimplesComandoComandoSe(node);
    }

    public void inASeTernarioComandoComandoSe(ASeTernarioComandoComandoSe node)
    {
        defaultIn(node);
    }

    public void outASeTernarioComandoComandoSe(ASeTernarioComandoComandoSe node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASeTernarioComandoComandoSe(ASeTernarioComandoComandoSe node)
    {
        inASeTernarioComandoComandoSe(node);
        if(node.getCmdSe() != null)
        {
            node.getCmdSe().apply(this);
        }
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        if(node.getComandoSe() != null)
        {
            node.getComandoSe().apply(this);
        }
        if(node.getCmdSenao() != null)
        {
            node.getCmdSenao().apply(this);
        }
        if(node.getComandoSenao() != null)
        {
            node.getComandoSenao().apply(this);
        }
        outASeTernarioComandoComandoSe(node);
    }

    public void inAComandoSe(AComandoSe node)
    {
        defaultIn(node);
    }

    public void outAComandoSe(AComandoSe node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAComandoSe(AComandoSe node)
    {
        inAComandoSe(node);
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        outAComandoSe(node);
    }

    public void inAEnquantoComandoComando(AEnquantoComandoComando node)
    {
        defaultIn(node);
    }

    public void outAEnquantoComandoComando(AEnquantoComandoComando node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAEnquantoComandoComando(AEnquantoComandoComando node)
    {
        inAEnquantoComandoComando(node);
        if(node.getCmdEnquanto() != null)
        {
            node.getCmdEnquanto().apply(this);
        }
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        if(node.getComando() != null)
        {
            node.getComando().apply(this);
        }
        outAEnquantoComandoComando(node);
    }

    public void inAIdAtribuicaoComandoComando(AIdAtribuicaoComandoComando node)
    {
        defaultIn(node);
    }

    public void outAIdAtribuicaoComandoComando(AIdAtribuicaoComandoComando node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAIdAtribuicaoComandoComando(AIdAtribuicaoComandoComando node)
    {
        inAIdAtribuicaoComandoComando(node);
        if(node.getIdAtribuicao() != null)
        {
            node.getIdAtribuicao().apply(this);
        }
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        outAIdAtribuicaoComandoComando(node);
    }

    public void inAChamadaProcedimentoComandoComando(AChamadaProcedimentoComandoComando node)
    {
        defaultIn(node);
    }

    public void outAChamadaProcedimentoComandoComando(AChamadaProcedimentoComandoComando node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAChamadaProcedimentoComandoComando(AChamadaProcedimentoComandoComando node)
    {
        inAChamadaProcedimentoComandoComando(node);
        if(node.getChamadaProcedimento() != null)
        {
            node.getChamadaProcedimento().apply(this);
        }
        if(node.getPontoVirgula() != null)
        {
            node.getPontoVirgula().apply(this);
        }
        outAChamadaProcedimentoComandoComando(node);
    }

    public void inABlocoComandosComando(ABlocoComandosComando node)
    {
        defaultIn(node);
    }

    public void outABlocoComandosComando(ABlocoComandosComando node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABlocoComandosComando(ABlocoComandosComando node)
    {
        inABlocoComandosComando(node);
        if(node.getBlocoComandos() != null)
        {
            node.getBlocoComandos().apply(this);
        }
        outABlocoComandosComando(node);
    }

    public void inABlocoComandosBlocoComandos(ABlocoComandosBlocoComandos node)
    {
        defaultIn(node);
    }

    public void outABlocoComandosBlocoComandos(ABlocoComandosBlocoComandos node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABlocoComandosBlocoComandos(ABlocoComandosBlocoComandos node)
    {
        inABlocoComandosBlocoComandos(node);
        if(node.getInicioBloco() != null)
        {
            node.getInicioBloco().apply(this);
        }
        {
            List<PProgramaEsq> copy = new ArrayList<PProgramaEsq>(node.getProgramaEsq());
            for(PProgramaEsq e : copy)
            {
                e.apply(this);
            }
        }
        {
            List<PComandoSe> copy = new ArrayList<PComandoSe>(node.getComandoSe());
            for(PComandoSe e : copy)
            {
                e.apply(this);
            }
        }
        if(node.getFimBloco() != null)
        {
            node.getFimBloco().apply(this);
        }
        outABlocoComandosBlocoComandos(node);
    }

    public void inAValorValor(AValorValor node)
    {
        defaultIn(node);
    }

    public void outAValorValor(AValorValor node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAValorValor(AValorValor node)
    {
        inAValorValor(node);
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        outAValorValor(node);
    }

    public void inAValorArrayValor(AValorArrayValor node)
    {
        defaultIn(node);
    }

    public void outAValorArrayValor(AValorArrayValor node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAValorArrayValor(AValorArrayValor node)
    {
        inAValorArrayValor(node);
        if(node.getValor() != null)
        {
            node.getValor().apply(this);
        }
        if(node.getColEsq() != null)
        {
            node.getColEsq().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getColDir() != null)
        {
            node.getColDir().apply(this);
        }
        outAValorArrayValor(node);
    }

    public void inABlocoExpressoesBlocoExpressoes(ABlocoExpressoesBlocoExpressoes node)
    {
        defaultIn(node);
    }

    public void outABlocoExpressoesBlocoExpressoes(ABlocoExpressoesBlocoExpressoes node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABlocoExpressoesBlocoExpressoes(ABlocoExpressoesBlocoExpressoes node)
    {
        inABlocoExpressoesBlocoExpressoes(node);
        if(node.getInicioBloco() != null)
        {
            node.getInicioBloco().apply(this);
        }
        {
            List<PProdDeclConst> copy = new ArrayList<PProdDeclConst>(node.getProdDeclConst());
            for(PProdDeclConst e : copy)
            {
                e.apply(this);
            }
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getFimBloco() != null)
        {
            node.getFimBloco().apply(this);
        }
        outABlocoExpressoesBlocoExpressoes(node);
    }

    public void inAChamadaFuncaoChamadaFuncao(AChamadaFuncaoChamadaFuncao node)
    {
        defaultIn(node);
    }

    public void outAChamadaFuncaoChamadaFuncao(AChamadaFuncaoChamadaFuncao node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAChamadaFuncaoChamadaFuncao(AChamadaFuncaoChamadaFuncao node)
    {
        inAChamadaFuncaoChamadaFuncao(node);
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getListaExp() != null)
        {
            node.getListaExp().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        outAChamadaFuncaoChamadaFuncao(node);
    }

    public void inAChamadaProcedimentoChamadaProcedimento(AChamadaProcedimentoChamadaProcedimento node)
    {
        defaultIn(node);
    }

    public void outAChamadaProcedimentoChamadaProcedimento(AChamadaProcedimentoChamadaProcedimento node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAChamadaProcedimentoChamadaProcedimento(AChamadaProcedimentoChamadaProcedimento node)
    {
        inAChamadaProcedimentoChamadaProcedimento(node);
        if(node.getId() != null)
        {
            node.getId().apply(this);
        }
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getListaExp() != null)
        {
            node.getListaExp().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        outAChamadaProcedimentoChamadaProcedimento(node);
    }

    public void inAListaExpListaExp(AListaExpListaExp node)
    {
        defaultIn(node);
    }

    public void outAListaExpListaExp(AListaExpListaExp node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAListaExpListaExp(AListaExpListaExp node)
    {
        inAListaExpListaExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        {
            List<PBarraExp> copy = new ArrayList<PBarraExp>(node.getBarraExp());
            for(PBarraExp e : copy)
            {
                e.apply(this);
            }
        }
        outAListaExpListaExp(node);
    }

    public void inATernarioTernario(ATernarioTernario node)
    {
        defaultIn(node);
    }

    public void outATernarioTernario(ATernarioTernario node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATernarioTernario(ATernarioTernario node)
    {
        inATernarioTernario(node);
        if(node.getCmdSe() != null)
        {
            node.getCmdSe().apply(this);
        }
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getExpCond() != null)
        {
            node.getExpCond().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        outATernarioTernario(node);
    }

    public void inABarraExpBarraExp(ABarraExpBarraExp node)
    {
        defaultIn(node);
    }

    public void outABarraExpBarraExp(ABarraExpBarraExp node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABarraExpBarraExp(ABarraExpBarraExp node)
    {
        inABarraExpBarraExp(node);
        if(node.getBarra() != null)
        {
            node.getBarra().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        outABarraExpBarraExp(node);
    }

    public void inAPrio1Exp(APrio1Exp node)
    {
        defaultIn(node);
    }

    public void outAPrio1Exp(APrio1Exp node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio1Exp(APrio1Exp node)
    {
        inAPrio1Exp(node);
        if(node.getPrio1() != null)
        {
            node.getPrio1().apply(this);
        }
        outAPrio1Exp(node);
    }

    public void inACompOuExp(ACompOuExp node)
    {
        defaultIn(node);
    }

    public void outACompOuExp(ACompOuExp node)
    {
        defaultOut(node);
    }

    @Override
    public void caseACompOuExp(ACompOuExp node)
    {
        inACompOuExp(node);
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getCompOu() != null)
        {
            node.getCompOu().apply(this);
        }
        if(node.getPrio1() != null)
        {
            node.getPrio1().apply(this);
        }
        outACompOuExp(node);
    }

    public void inAPrio2Prio1(APrio2Prio1 node)
    {
        defaultIn(node);
    }

    public void outAPrio2Prio1(APrio2Prio1 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio2Prio1(APrio2Prio1 node)
    {
        inAPrio2Prio1(node);
        if(node.getPrio2() != null)
        {
            node.getPrio2().apply(this);
        }
        outAPrio2Prio1(node);
    }

    public void inACompEPrio1(ACompEPrio1 node)
    {
        defaultIn(node);
    }

    public void outACompEPrio1(ACompEPrio1 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseACompEPrio1(ACompEPrio1 node)
    {
        inACompEPrio1(node);
        if(node.getPrio1() != null)
        {
            node.getPrio1().apply(this);
        }
        if(node.getCompE() != null)
        {
            node.getCompE().apply(this);
        }
        if(node.getPrio2() != null)
        {
            node.getPrio2().apply(this);
        }
        outACompEPrio1(node);
    }

    public void inAPrio3Prio2(APrio3Prio2 node)
    {
        defaultIn(node);
    }

    public void outAPrio3Prio2(APrio3Prio2 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio3Prio2(APrio3Prio2 node)
    {
        inAPrio3Prio2(node);
        if(node.getPrio3() != null)
        {
            node.getPrio3().apply(this);
        }
        outAPrio3Prio2(node);
    }

    public void inAIgualPrio2(AIgualPrio2 node)
    {
        defaultIn(node);
    }

    public void outAIgualPrio2(AIgualPrio2 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAIgualPrio2(AIgualPrio2 node)
    {
        inAIgualPrio2(node);
        if(node.getPrio2() != null)
        {
            node.getPrio2().apply(this);
        }
        if(node.getIgual() != null)
        {
            node.getIgual().apply(this);
        }
        if(node.getPrio3() != null)
        {
            node.getPrio3().apply(this);
        }
        outAIgualPrio2(node);
    }

    public void inAPrio4Prio3(APrio4Prio3 node)
    {
        defaultIn(node);
    }

    public void outAPrio4Prio3(APrio4Prio3 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio4Prio3(APrio4Prio3 node)
    {
        inAPrio4Prio3(node);
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        outAPrio4Prio3(node);
    }

    public void inAMaiorIgualPrio3(AMaiorIgualPrio3 node)
    {
        defaultIn(node);
    }

    public void outAMaiorIgualPrio3(AMaiorIgualPrio3 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMaiorIgualPrio3(AMaiorIgualPrio3 node)
    {
        inAMaiorIgualPrio3(node);
        if(node.getPrio3() != null)
        {
            node.getPrio3().apply(this);
        }
        if(node.getMaiorIgual() != null)
        {
            node.getMaiorIgual().apply(this);
        }
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        outAMaiorIgualPrio3(node);
    }

    public void inAMaiorPrio3(AMaiorPrio3 node)
    {
        defaultIn(node);
    }

    public void outAMaiorPrio3(AMaiorPrio3 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMaiorPrio3(AMaiorPrio3 node)
    {
        inAMaiorPrio3(node);
        if(node.getPrio3() != null)
        {
            node.getPrio3().apply(this);
        }
        if(node.getMaior() != null)
        {
            node.getMaior().apply(this);
        }
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        outAMaiorPrio3(node);
    }

    public void inAPrio5Prio4(APrio5Prio4 node)
    {
        defaultIn(node);
    }

    public void outAPrio5Prio4(APrio5Prio4 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio5Prio4(APrio5Prio4 node)
    {
        inAPrio5Prio4(node);
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        outAPrio5Prio4(node);
    }

    public void inASomaPrio4(ASomaPrio4 node)
    {
        defaultIn(node);
    }

    public void outASomaPrio4(ASomaPrio4 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseASomaPrio4(ASomaPrio4 node)
    {
        inASomaPrio4(node);
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        if(node.getSoma() != null)
        {
            node.getSoma().apply(this);
        }
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        outASomaPrio4(node);
    }

    public void inAMenosPrio4(AMenosPrio4 node)
    {
        defaultIn(node);
    }

    public void outAMenosPrio4(AMenosPrio4 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMenosPrio4(AMenosPrio4 node)
    {
        inAMenosPrio4(node);
        if(node.getPrio4() != null)
        {
            node.getPrio4().apply(this);
        }
        if(node.getMenos() != null)
        {
            node.getMenos().apply(this);
        }
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        outAMenosPrio4(node);
    }

    public void inAPrio6Prio5(APrio6Prio5 node)
    {
        defaultIn(node);
    }

    public void outAPrio6Prio5(APrio6Prio5 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio6Prio5(APrio6Prio5 node)
    {
        inAPrio6Prio5(node);
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        outAPrio6Prio5(node);
    }

    public void inAMultPrio5(AMultPrio5 node)
    {
        defaultIn(node);
    }

    public void outAMultPrio5(AMultPrio5 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAMultPrio5(AMultPrio5 node)
    {
        inAMultPrio5(node);
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        if(node.getMult() != null)
        {
            node.getMult().apply(this);
        }
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        outAMultPrio5(node);
    }

    public void inADivPrio5(ADivPrio5 node)
    {
        defaultIn(node);
    }

    public void outADivPrio5(ADivPrio5 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseADivPrio5(ADivPrio5 node)
    {
        inADivPrio5(node);
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        if(node.getDiv() != null)
        {
            node.getDiv().apply(this);
        }
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        outADivPrio5(node);
    }

    public void inAModPrio5(AModPrio5 node)
    {
        defaultIn(node);
    }

    public void outAModPrio5(AModPrio5 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAModPrio5(AModPrio5 node)
    {
        inAModPrio5(node);
        if(node.getPrio5() != null)
        {
            node.getPrio5().apply(this);
        }
        if(node.getMod() != null)
        {
            node.getMod().apply(this);
        }
        if(node.getPrio6() != null)
        {
            node.getPrio6().apply(this);
        }
        outAModPrio5(node);
    }

    public void inAPrio7Prio6(APrio7Prio6 node)
    {
        defaultIn(node);
    }

    public void outAPrio7Prio6(APrio7Prio6 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio7Prio6(APrio7Prio6 node)
    {
        inAPrio7Prio6(node);
        if(node.getPrio7() != null)
        {
            node.getPrio7().apply(this);
        }
        outAPrio7Prio6(node);
    }

    public void inANegacaoPrio6(ANegacaoPrio6 node)
    {
        defaultIn(node);
    }

    public void outANegacaoPrio6(ANegacaoPrio6 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseANegacaoPrio6(ANegacaoPrio6 node)
    {
        inANegacaoPrio6(node);
        if(node.getNegacao() != null)
        {
            node.getNegacao().apply(this);
        }
        if(node.getPrio7() != null)
        {
            node.getPrio7().apply(this);
        }
        outANegacaoPrio6(node);
    }

    public void inANegativoPrio6(ANegativoPrio6 node)
    {
        defaultIn(node);
    }

    public void outANegativoPrio6(ANegativoPrio6 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseANegativoPrio6(ANegativoPrio6 node)
    {
        inANegativoPrio6(node);
        if(node.getMenos() != null)
        {
            node.getMenos().apply(this);
        }
        if(node.getPrio7() != null)
        {
            node.getPrio7().apply(this);
        }
        outANegativoPrio6(node);
    }

    public void inANumeroIntPrio7(ANumeroIntPrio7 node)
    {
        defaultIn(node);
    }

    public void outANumeroIntPrio7(ANumeroIntPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseANumeroIntPrio7(ANumeroIntPrio7 node)
    {
        inANumeroIntPrio7(node);
        if(node.getNumeroInt() != null)
        {
            node.getNumeroInt().apply(this);
        }
        outANumeroIntPrio7(node);
    }

    public void inANumeroRealPrio7(ANumeroRealPrio7 node)
    {
        defaultIn(node);
    }

    public void outANumeroRealPrio7(ANumeroRealPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseANumeroRealPrio7(ANumeroRealPrio7 node)
    {
        inANumeroRealPrio7(node);
        if(node.getNumeroReal() != null)
        {
            node.getNumeroReal().apply(this);
        }
        outANumeroRealPrio7(node);
    }

    public void inABooleanoPrio7(ABooleanoPrio7 node)
    {
        defaultIn(node);
    }

    public void outABooleanoPrio7(ABooleanoPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABooleanoPrio7(ABooleanoPrio7 node)
    {
        inABooleanoPrio7(node);
        if(node.getVerdade() != null)
        {
            node.getVerdade().apply(this);
        }
        outABooleanoPrio7(node);
    }

    public void inAPrio7(APrio7 node)
    {
        defaultIn(node);
    }

    public void outAPrio7(APrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAPrio7(APrio7 node)
    {
        inAPrio7(node);
        if(node.getFalso() != null)
        {
            node.getFalso().apply(this);
        }
        outAPrio7(node);
    }

    public void inAValorPrio7(AValorPrio7 node)
    {
        defaultIn(node);
    }

    public void outAValorPrio7(AValorPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAValorPrio7(AValorPrio7 node)
    {
        inAValorPrio7(node);
        if(node.getValor() != null)
        {
            node.getValor().apply(this);
        }
        outAValorPrio7(node);
    }

    public void inAChamadaFuncaoPrio7(AChamadaFuncaoPrio7 node)
    {
        defaultIn(node);
    }

    public void outAChamadaFuncaoPrio7(AChamadaFuncaoPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAChamadaFuncaoPrio7(AChamadaFuncaoPrio7 node)
    {
        inAChamadaFuncaoPrio7(node);
        if(node.getChamadaFuncao() != null)
        {
            node.getChamadaFuncao().apply(this);
        }
        outAChamadaFuncaoPrio7(node);
    }

    public void inAArrayCompPrio7(AArrayCompPrio7 node)
    {
        defaultIn(node);
    }

    public void outAArrayCompPrio7(AArrayCompPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAArrayCompPrio7(AArrayCompPrio7 node)
    {
        inAArrayCompPrio7(node);
        if(node.getArrayComp() != null)
        {
            node.getArrayComp().apply(this);
        }
        outAArrayCompPrio7(node);
    }

    public void inATernarioPrio7(ATernarioPrio7 node)
    {
        defaultIn(node);
    }

    public void outATernarioPrio7(ATernarioPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseATernarioPrio7(ATernarioPrio7 node)
    {
        inATernarioPrio7(node);
        if(node.getTernario() != null)
        {
            node.getTernario().apply(this);
        }
        outATernarioPrio7(node);
    }

    public void inABlocoExpressoesPrio7(ABlocoExpressoesPrio7 node)
    {
        defaultIn(node);
    }

    public void outABlocoExpressoesPrio7(ABlocoExpressoesPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseABlocoExpressoesPrio7(ABlocoExpressoesPrio7 node)
    {
        inABlocoExpressoesPrio7(node);
        if(node.getBlocoExpressoes() != null)
        {
            node.getBlocoExpressoes().apply(this);
        }
        outABlocoExpressoesPrio7(node);
    }

    public void inAParPrio7(AParPrio7 node)
    {
        defaultIn(node);
    }

    public void outAParPrio7(AParPrio7 node)
    {
        defaultOut(node);
    }

    @Override
    public void caseAParPrio7(AParPrio7 node)
    {
        inAParPrio7(node);
        if(node.getParEsq() != null)
        {
            node.getParEsq().apply(this);
        }
        if(node.getExp() != null)
        {
            node.getExp().apply(this);
        }
        if(node.getParDir() != null)
        {
            node.getParDir().apply(this);
        }
        outAParPrio7(node);
    }
}
