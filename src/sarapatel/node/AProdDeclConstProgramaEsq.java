/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AProdDeclConstProgramaEsq extends PProgramaEsq
{
    private PProdDeclConst _prodDeclConst_;

    public AProdDeclConstProgramaEsq()
    {
        // Constructor
    }

    public AProdDeclConstProgramaEsq(
        @SuppressWarnings("hiding") PProdDeclConst _prodDeclConst_)
    {
        // Constructor
        setProdDeclConst(_prodDeclConst_);

    }

    @Override
    public Object clone()
    {
        return new AProdDeclConstProgramaEsq(
            cloneNode(this._prodDeclConst_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProdDeclConstProgramaEsq(this);
    }

    public PProdDeclConst getProdDeclConst()
    {
        return this._prodDeclConst_;
    }

    public void setProdDeclConst(PProdDeclConst node)
    {
        if(this._prodDeclConst_ != null)
        {
            this._prodDeclConst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._prodDeclConst_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._prodDeclConst_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._prodDeclConst_ == child)
        {
            this._prodDeclConst_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._prodDeclConst_ == oldChild)
        {
            setProdDeclConst((PProdDeclConst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
