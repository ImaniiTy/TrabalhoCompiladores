/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class ACompOuPrio0 extends PPrio0
{
    private PPrio0 _prio0_;
    private TCompOu _compOu_;
    private PPrio1 _prio1_;

    public ACompOuPrio0()
    {
        // Constructor
    }

    public ACompOuPrio0(
        @SuppressWarnings("hiding") PPrio0 _prio0_,
        @SuppressWarnings("hiding") TCompOu _compOu_,
        @SuppressWarnings("hiding") PPrio1 _prio1_)
    {
        // Constructor
        setPrio0(_prio0_);

        setCompOu(_compOu_);

        setPrio1(_prio1_);

    }

    @Override
    public Object clone()
    {
        return new ACompOuPrio0(
            cloneNode(this._prio0_),
            cloneNode(this._compOu_),
            cloneNode(this._prio1_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompOuPrio0(this);
    }

    public PPrio0 getPrio0()
    {
        return this._prio0_;
    }

    public void setPrio0(PPrio0 node)
    {
        if(this._prio0_ != null)
        {
            this._prio0_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._prio0_ = node;
    }

    public TCompOu getCompOu()
    {
        return this._compOu_;
    }

    public void setCompOu(TCompOu node)
    {
        if(this._compOu_ != null)
        {
            this._compOu_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._compOu_ = node;
    }

    public PPrio1 getPrio1()
    {
        return this._prio1_;
    }

    public void setPrio1(PPrio1 node)
    {
        if(this._prio1_ != null)
        {
            this._prio1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._prio1_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._prio0_)
            + toString(this._compOu_)
            + toString(this._prio1_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._prio0_ == child)
        {
            this._prio0_ = null;
            return;
        }

        if(this._compOu_ == child)
        {
            this._compOu_ = null;
            return;
        }

        if(this._prio1_ == child)
        {
            this._prio1_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._prio0_ == oldChild)
        {
            setPrio0((PPrio0) newChild);
            return;
        }

        if(this._compOu_ == oldChild)
        {
            setCompOu((TCompOu) newChild);
            return;
        }

        if(this._prio1_ == oldChild)
        {
            setPrio1((PPrio1) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
