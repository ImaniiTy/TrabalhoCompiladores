/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AValorArrayValor extends PValor
{
    private PValor _valor_;
    private TColEsq _colEsq_;
    private PTernarioExp _ternarioExp_;
    private TColDir _colDir_;

    public AValorArrayValor()
    {
        // Constructor
    }

    public AValorArrayValor(
        @SuppressWarnings("hiding") PValor _valor_,
        @SuppressWarnings("hiding") TColEsq _colEsq_,
        @SuppressWarnings("hiding") PTernarioExp _ternarioExp_,
        @SuppressWarnings("hiding") TColDir _colDir_)
    {
        // Constructor
        setValor(_valor_);

        setColEsq(_colEsq_);

        setTernarioExp(_ternarioExp_);

        setColDir(_colDir_);

    }

    @Override
    public Object clone()
    {
        return new AValorArrayValor(
            cloneNode(this._valor_),
            cloneNode(this._colEsq_),
            cloneNode(this._ternarioExp_),
            cloneNode(this._colDir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAValorArrayValor(this);
    }

    public PValor getValor()
    {
        return this._valor_;
    }

    public void setValor(PValor node)
    {
        if(this._valor_ != null)
        {
            this._valor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._valor_ = node;
    }

    public TColEsq getColEsq()
    {
        return this._colEsq_;
    }

    public void setColEsq(TColEsq node)
    {
        if(this._colEsq_ != null)
        {
            this._colEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colEsq_ = node;
    }

    public PTernarioExp getTernarioExp()
    {
        return this._ternarioExp_;
    }

    public void setTernarioExp(PTernarioExp node)
    {
        if(this._ternarioExp_ != null)
        {
            this._ternarioExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ternarioExp_ = node;
    }

    public TColDir getColDir()
    {
        return this._colDir_;
    }

    public void setColDir(TColDir node)
    {
        if(this._colDir_ != null)
        {
            this._colDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colDir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._valor_)
            + toString(this._colEsq_)
            + toString(this._ternarioExp_)
            + toString(this._colDir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._valor_ == child)
        {
            this._valor_ = null;
            return;
        }

        if(this._colEsq_ == child)
        {
            this._colEsq_ = null;
            return;
        }

        if(this._ternarioExp_ == child)
        {
            this._ternarioExp_ = null;
            return;
        }

        if(this._colDir_ == child)
        {
            this._colDir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._valor_ == oldChild)
        {
            setValor((PValor) newChild);
            return;
        }

        if(this._colEsq_ == oldChild)
        {
            setColEsq((TColEsq) newChild);
            return;
        }

        if(this._ternarioExp_ == oldChild)
        {
            setTernarioExp((PTernarioExp) newChild);
            return;
        }

        if(this._colDir_ == oldChild)
        {
            setColDir((TColDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
