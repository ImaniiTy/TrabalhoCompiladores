/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AParPrio7 extends PPrio7
{
    private TParEsq _parEsq_;
    private PPrio0 _prio0_;
    private TParDir _parDir_;

    public AParPrio7()
    {
        // Constructor
    }

    public AParPrio7(
        @SuppressWarnings("hiding") TParEsq _parEsq_,
        @SuppressWarnings("hiding") PPrio0 _prio0_,
        @SuppressWarnings("hiding") TParDir _parDir_)
    {
        // Constructor
        setParEsq(_parEsq_);

        setPrio0(_prio0_);

        setParDir(_parDir_);

    }

    @Override
    public Object clone()
    {
        return new AParPrio7(
            cloneNode(this._parEsq_),
            cloneNode(this._prio0_),
            cloneNode(this._parDir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParPrio7(this);
    }

    public TParEsq getParEsq()
    {
        return this._parEsq_;
    }

    public void setParEsq(TParEsq node)
    {
        if(this._parEsq_ != null)
        {
            this._parEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parEsq_ = node;
    }

    public PPrio0 getPrio0()
    {
        return this._prio0_;
    }

    public void setPrio0(PPrio0 node)
    {
        if(this._prio0_ != null)
        {
            this._prio0_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._prio0_ = node;
    }

    public TParDir getParDir()
    {
        return this._parDir_;
    }

    public void setParDir(TParDir node)
    {
        if(this._parDir_ != null)
        {
            this._parDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parDir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._parEsq_)
            + toString(this._prio0_)
            + toString(this._parDir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._parEsq_ == child)
        {
            this._parEsq_ = null;
            return;
        }

        if(this._prio0_ == child)
        {
            this._prio0_ = null;
            return;
        }

        if(this._parDir_ == child)
        {
            this._parDir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._parEsq_ == oldChild)
        {
            setParEsq((TParEsq) newChild);
            return;
        }

        if(this._prio0_ == oldChild)
        {
            setPrio0((PPrio0) newChild);
            return;
        }

        if(this._parDir_ == oldChild)
        {
            setParDir((TParDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
