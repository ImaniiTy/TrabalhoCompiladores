/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class ABarraExpBarraExp extends PBarraExp
{
    private TBarra _barra_;
    private PTernarioExp _ternarioExp_;

    public ABarraExpBarraExp()
    {
        // Constructor
    }

    public ABarraExpBarraExp(
        @SuppressWarnings("hiding") TBarra _barra_,
        @SuppressWarnings("hiding") PTernarioExp _ternarioExp_)
    {
        // Constructor
        setBarra(_barra_);

        setTernarioExp(_ternarioExp_);

    }

    @Override
    public Object clone()
    {
        return new ABarraExpBarraExp(
            cloneNode(this._barra_),
            cloneNode(this._ternarioExp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABarraExpBarraExp(this);
    }

    public TBarra getBarra()
    {
        return this._barra_;
    }

    public void setBarra(TBarra node)
    {
        if(this._barra_ != null)
        {
            this._barra_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._barra_ = node;
    }

    public PTernarioExp getTernarioExp()
    {
        return this._ternarioExp_;
    }

    public void setTernarioExp(PTernarioExp node)
    {
        if(this._ternarioExp_ != null)
        {
            this._ternarioExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ternarioExp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._barra_)
            + toString(this._ternarioExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._barra_ == child)
        {
            this._barra_ = null;
            return;
        }

        if(this._ternarioExp_ == child)
        {
            this._ternarioExp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._barra_ == oldChild)
        {
            setBarra((TBarra) newChild);
            return;
        }

        if(this._ternarioExp_ == oldChild)
        {
            setTernarioExp((PTernarioExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
