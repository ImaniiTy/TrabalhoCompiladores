/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class ATernarioExp extends PExp
{
    private PExp _cond_;
    private PExp _verdadeiro_;
    private PExp _falso_;

    public ATernarioExp()
    {
        // Constructor
    }

    public ATernarioExp(
        @SuppressWarnings("hiding") PExp _cond_,
        @SuppressWarnings("hiding") PExp _verdadeiro_,
        @SuppressWarnings("hiding") PExp _falso_)
    {
        // Constructor
        setCond(_cond_);

        setVerdadeiro(_verdadeiro_);

        setFalso(_falso_);

    }

    @Override
    public Object clone()
    {
        return new ATernarioExp(
            cloneNode(this._cond_),
            cloneNode(this._verdadeiro_),
            cloneNode(this._falso_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATernarioExp(this);
    }

    public PExp getCond()
    {
        return this._cond_;
    }

    public void setCond(PExp node)
    {
        if(this._cond_ != null)
        {
            this._cond_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cond_ = node;
    }

    public PExp getVerdadeiro()
    {
        return this._verdadeiro_;
    }

    public void setVerdadeiro(PExp node)
    {
        if(this._verdadeiro_ != null)
        {
            this._verdadeiro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._verdadeiro_ = node;
    }

    public PExp getFalso()
    {
        return this._falso_;
    }

    public void setFalso(PExp node)
    {
        if(this._falso_ != null)
        {
            this._falso_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._falso_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._cond_)
            + toString(this._verdadeiro_)
            + toString(this._falso_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._cond_ == child)
        {
            this._cond_ = null;
            return;
        }

        if(this._verdadeiro_ == child)
        {
            this._verdadeiro_ = null;
            return;
        }

        if(this._falso_ == child)
        {
            this._falso_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._cond_ == oldChild)
        {
            setCond((PExp) newChild);
            return;
        }

        if(this._verdadeiro_ == oldChild)
        {
            setVerdadeiro((PExp) newChild);
            return;
        }

        if(this._falso_ == oldChild)
        {
            setFalso((PExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
