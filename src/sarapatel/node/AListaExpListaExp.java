/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import java.util.*;
import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AListaExpListaExp extends PListaExp
{
    private PTernarioExp _ternarioExp_;
    private final LinkedList<PBarraExp> _barraExp_ = new LinkedList<PBarraExp>();

    public AListaExpListaExp()
    {
        // Constructor
    }

    public AListaExpListaExp(
        @SuppressWarnings("hiding") PTernarioExp _ternarioExp_,
        @SuppressWarnings("hiding") List<?> _barraExp_)
    {
        // Constructor
        setTernarioExp(_ternarioExp_);

        setBarraExp(_barraExp_);

    }

    @Override
    public Object clone()
    {
        return new AListaExpListaExp(
            cloneNode(this._ternarioExp_),
            cloneList(this._barraExp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListaExpListaExp(this);
    }

    public PTernarioExp getTernarioExp()
    {
        return this._ternarioExp_;
    }

    public void setTernarioExp(PTernarioExp node)
    {
        if(this._ternarioExp_ != null)
        {
            this._ternarioExp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ternarioExp_ = node;
    }

    public LinkedList<PBarraExp> getBarraExp()
    {
        return this._barraExp_;
    }

    public void setBarraExp(List<?> list)
    {
        for(PBarraExp e : this._barraExp_)
        {
            e.parent(null);
        }
        this._barraExp_.clear();

        for(Object obj_e : list)
        {
            PBarraExp e = (PBarraExp) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._barraExp_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ternarioExp_)
            + toString(this._barraExp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ternarioExp_ == child)
        {
            this._ternarioExp_ = null;
            return;
        }

        if(this._barraExp_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ternarioExp_ == oldChild)
        {
            setTernarioExp((PTernarioExp) newChild);
            return;
        }

        for(ListIterator<PBarraExp> i = this._barraExp_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PBarraExp) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
